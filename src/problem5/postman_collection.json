{
  "info": {
    "name": "Problem 5 - CRUD API",
    "description": "Complete Postman collection for testing all endpoints of the CRUD Server",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check if the server is running and healthy"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users - Create",
      "item": [
        {
          "name": "Create User - Success",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"age\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Create a new user with valid data"
          },
          "response": []
        },
        {
          "name": "Create User - Missing Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Should fail with 400 - missing required fields"
          },
          "response": []
        },
        {
          "name": "Create User - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Invalid User\",\n  \"email\": \"invalidemail\",\n  \"age\": 25\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Should fail with 400 - invalid email format"
          },
          "response": []
        },
        {
          "name": "Create User - Negative Age",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Negative Age User\",\n  \"email\": \"negative@example.com\",\n  \"age\": -5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Should fail with 400 - negative age"
          },
          "response": []
        },
        {
          "name": "Create User - Non-Numeric Age",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"String Age User\",\n  \"email\": \"stringage@example.com\",\n  \"age\": \"thirty\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Should fail with 400 - age must be numeric"
          },
          "response": []
        },
        {
          "name": "Create User - Duplicate Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Duplicate User\",\n  \"email\": \"john@example.com\",\n  \"age\": 40\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Should fail with 409 - email already exists (after creating first user)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users - Read",
      "item": [
        {
          "name": "List All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Get all users with default pagination (limit 10, offset 0)"
          },
          "response": []
        },
        {
          "name": "List Users - With Limit",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            },
            "description": "Get users with custom limit"
          },
          "response": []
        },
        {
          "name": "List Users - With Offset",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?offset=5&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "offset",
                  "value": "5"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            },
            "description": "Get paginated users (pagination test)"
          },
          "response": []
        },
        {
          "name": "List Users - Filter by Name",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?name=John",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "name",
                  "value": "John"
                }
              ]
            },
            "description": "Filter users by name (partial match)"
          },
          "response": []
        },
        {
          "name": "List Users - Filter by Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?email=example.com",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "email",
                  "value": "example.com"
                }
              ]
            },
            "description": "Filter users by email (partial match)"
          },
          "response": []
        },
        {
          "name": "List Users - Filter by Age Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?minAge=25&maxAge=35",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "minAge",
                  "value": "25"
                },
                {
                  "key": "maxAge",
                  "value": "35"
                }
              ]
            },
            "description": "Filter users by age range"
          },
          "response": []
        },
        {
          "name": "List Users - Filter by Min Age Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?minAge=30",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "minAge",
                  "value": "30"
                }
              ]
            },
            "description": "Filter users with age >= 30"
          },
          "response": []
        },
        {
          "name": "List Users - All Filters Combined",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?name=Doe&email=example&minAge=25&maxAge=40&limit=20&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "name",
                  "value": "Doe"
                },
                {
                  "key": "email",
                  "value": "example"
                },
                {
                  "key": "minAge",
                  "value": "25"
                },
                {
                  "key": "maxAge",
                  "value": "40"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Test multiple filters at once"
          },
          "response": []
        },
        {
          "name": "List Users - Invalid Limit",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?limit=invalid",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "limit",
                  "value": "invalid"
                }
              ]
            },
            "description": "Should fail with 400 - invalid limit parameter"
          },
          "response": []
        },
        {
          "name": "List Users - Invalid Min Age",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?minAge=abc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "minAge",
                  "value": "abc"
                }
              ]
            },
            "description": "Should fail with 400 - invalid minAge parameter"
          },
          "response": []
        },
        {
          "name": "Get User by ID - Success",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Get a specific user by ID (use actual ID from create response)"
          },
          "response": []
        },
        {
          "name": "Get User by ID - Not Found",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/nonexistent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "nonexistent-id"]
            },
            "description": "Should fail with 404 - user not found"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users - Update",
      "item": [
        {
          "name": "Update User - All Fields",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Updated\",\n  \"email\": \"john.updated@example.com\",\n  \"age\": 31\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Update all fields of a user"
          },
          "response": []
        },
        {
          "name": "Update User - Name Only",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Updated\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Update only name field"
          },
          "response": []
        },
        {
          "name": "Update User - Email Only",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newemail@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Update only email field"
          },
          "response": []
        },
        {
          "name": "Update User - Age Only",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"age\": 35\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Update only age field"
          },
          "response": []
        },
        {
          "name": "Update User - No Fields",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Should fail with 400 - at least one field required"
          },
          "response": []
        },
        {
          "name": "Update User - Invalid Email",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalidemail\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Should fail with 400 - invalid email format"
          },
          "response": []
        },
        {
          "name": "Update User - Negative Age",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"age\": -10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Should fail with 400 - negative age"
          },
          "response": []
        },
        {
          "name": "Update User - Non-Numeric Age",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"age\": \"forty\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Should fail with 400 - age must be numeric"
          },
          "response": []
        },
        {
          "name": "Update User - User Not Found",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/nonexistent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "nonexistent-id"]
            },
            "description": "Should fail with 404 - user not found"
          },
          "response": []
        },
        {
          "name": "Update User - Duplicate Email",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"existing@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Should fail with 409 - email already exists (if updating to existing email)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users - Delete",
      "item": [
        {
          "name": "Delete User - Success",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Delete a user successfully"
          },
          "response": []
        },
        {
          "name": "Delete User - Not Found",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/nonexistent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "nonexistent-id"]
            },
            "description": "Should fail with 404 - user not found"
          },
          "response": []
        },
        {
          "name": "Delete User - Already Deleted",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Should fail with 404 - user already deleted"
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ]
}
